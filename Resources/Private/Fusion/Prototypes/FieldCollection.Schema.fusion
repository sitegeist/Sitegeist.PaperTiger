prototype(Sitegeist.PaperTiger:FieldCollection.Schema) < prototype(Neos.Fusion:Component) {
    nodePath = null

    renderer = Sitegeist.PaperTiger:FieldCollection.Schema.Internal {
        schemaMap = Neos.Fusion:Reduce {
            items = ${q(node).children(props.nodePath).find('[instanceof Sitegeist.PaperTiger:Field]').get()}
            itemName = 'node'
            carryName = 'carry'
            itemReducer = Neos.Fusion:Value {
                name = ${q(node).is('[instanceof Sitegeist.PaperTiger:Mixin.Name]') ? q(node).property('name') : q(node).property('_identifier')}
                schema = Neos.Fusion:Renderer {
                    @if.canRender = Neos.Fusion:CanRender {
                        type = ${node.nodeTypeName + '.Schema'}
                    }
                    type = ${node.nodeTypeName + '.Schema'}
                }
                value = ${(this.name && this.schema) ? Array.set(carry, this.name, this.schema) : carry}
            }
            initialValue = ${{}}
        }
    }
}

prototype(Sitegeist.PaperTiger:FieldCollection.Schema.Internal) {
    @class = '\\Sitegeist\\PaperTiger\\FusionObjects\\SchemaCollectionImplementation'
}


